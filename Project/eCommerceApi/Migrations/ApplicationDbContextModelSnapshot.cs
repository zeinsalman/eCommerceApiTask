// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerceApi.Data;

namespace eCommerceApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eCommerceApi.Models.Culture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cultures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "en",
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ar",
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 3,
                            Code = "fr",
                            Name = "French"
                        });
                });

            modelBuilder.Entity("eCommerceApi.Models.Localization", b =>
                {
                    b.Property<int>("LocalizationSetId");

                    b.Property<int>("CultureId");

                    b.Property<string>("Value");

                    b.HasKey("LocalizationSetId", "CultureId");

                    b.HasIndex("CultureId");

                    b.ToTable("Localizations");
                });

            modelBuilder.Entity("eCommerceApi.Models.LocalizationSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("LocalizationSets");
                });

            modelBuilder.Entity("eCommerceApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DescriptionId");

                    b.Property<int?>("NameId");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("NameId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("eCommerceApi.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<int?>("TypeId");

                    b.Property<int?>("ValueId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TypeId");

                    b.HasIndex("ValueId");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("eCommerceApi.Models.Localization", b =>
                {
                    b.HasOne("eCommerceApi.Models.Culture", "Culture")
                        .WithMany("Localizations")
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eCommerceApi.Models.LocalizationSet", "LocalizationSet")
                        .WithMany("Localizations")
                        .HasForeignKey("LocalizationSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eCommerceApi.Models.Product", b =>
                {
                    b.HasOne("eCommerceApi.Models.LocalizationSet", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");

                    b.HasOne("eCommerceApi.Models.LocalizationSet", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");
                });

            modelBuilder.Entity("eCommerceApi.Models.ProductVariant", b =>
                {
                    b.HasOne("eCommerceApi.Models.Product", "Product")
                        .WithMany("Varaints")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eCommerceApi.Models.LocalizationSet", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.HasOne("eCommerceApi.Models.LocalizationSet", "Value")
                        .WithMany()
                        .HasForeignKey("ValueId");
                });
#pragma warning restore 612, 618
        }
    }
}
